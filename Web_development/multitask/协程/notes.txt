迭代器作用：把生成一组数的方法保存起来，减少内存的使用
生成器：特殊的迭代器，通过yield使一个函数变为生成器，用next()和send()方法来获取迭代的数
for的功能实现就是靠迭代器来实现的。


协程工作的原理：用单线程单进程，非堵塞的形式来进行多任务的并发运行
迭代器 -> 生成器（特殊的迭代器）->利用生成器中的yield来实现多任务 -> 协程gevent包装了这个yield实现多任务的功能

如：
def task_1():
    while True:
        print("---1----")
        time.sleep(0.1)
        yield


def task_2():
    while True:
        print("---2----")
        time.sleep(0.1)
        yield


def main():
    t1 = task_1()
    t2 = task_2()
    # 先让t1运行一会，当t1中遇到yield的时候，再返回到23行，然后
    # 执行t2，当它遇到yield的时候，再次切换到t1中
    # 这样t1/t2/t1/t2的交替运行，最终实现了多任务....协程
    while True:
        next(t1)
        next(t2)
